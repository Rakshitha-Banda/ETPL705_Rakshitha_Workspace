package com.evergent.corejava.rakshitha.application4;

public class sample {

}

package com.evergent.corejava.rakshitha.application4;

import java.util.*;

interface Product {
    String getName();
    int getPrice();
}

abstract class Category implements Product {
    protected String name;
    protected int price;

    public Category(String name, int price) {
        this.name = name;
        this.price = price;
    }

    @Override
    public String getName() {
        return name;
    }

    @Override
    public int getPrice() {
        return price;
    }
}

class DairyProduct extends Category {
    public DairyProduct(String name, int price) {
        super(name, price);
   }
}

class Beverage extends Category {
    public Beverage(String name, int price) {
        super(name, price);
    }
}

class Snack extends Category {
   public Snack(String name, int price) {
       super(name, price);
    }
}

class Vegetable extends Category {
   public Vegetable(String name, int price) {
        super(name, price);
    }
}

class CustomerCart {
    private List<Product> products = new ArrayList<>();
    private List<Integer> quantities = new ArrayList<>();
    private static int totalAmount = 0;

    public void addProduct(Product product, int quantity) {
        products.add(product);
        quantities.add(quantity);
        totalAmount += product.getPrice() * quantity;
    }

    public int getTotalAmount() {
        return totalAmount;
    }

    public void showItems() {
        System.out.println("Products      Quantity");
        System.out.println("=======================");
        for (int i = 0; i < products.size(); i++) {
            System.out.println(products.get(i).getName() + "          " + quantities.get(i));
        }
    }
}

class DiscountCalculator {
    public int calculateDiscount(int totalAmount) {
        if (totalAmount <= 100) {
            return 0;
        } else if (totalAmount <= 500) {
            return 20;
        } else if (totalAmount <= 1000) {
            return 60;
        } else {
            return 100;
        }
    }
}

class TaxCalculator {
    public int calculateTax(int amount) {
        return (int) (amount * 0.01);
    }
}

final class GeneralStoreManagementSystem {
    private static final Scanner SCANNER = new Scanner(System.in);
    private final CustomerCart cart = new CustomerCart();
    private final DiscountCalculator discountCalculator = new DiscountCalculator();
    private final TaxCalculator taxCalculator = new TaxCalculator();

    public void start() {
        while (true) {
            System.out.println("  Main Menu      ");
            System.out.println("=================");
            System.out.println("1. Buy products");
            System.out.println("2. Discount of products");
            System.out.println("3. Payment after discount");
            System.out.println("4. Show list of items that customer has purchased");
            System.out.println("5. Exit");
            System.out.println("=================");
            System.out.println("Enter your choice (1-5):");

            int choice = Integer.parseInt(SCANNER.nextLine());

            switch (choice) {
                case 1 -> showProductMenu();
                case 2 -> showDiscount();
                case 3 -> makePayment();
                case 4 -> cart.showItems();
                case 5 -> {
                    System.out.println("Thank you for coming!");
                    System.exit(0);
                }
                default -> System.out.println("Invalid choice, please try again.");
            }
        }
    }

    private void showProductMenu() {
        while (true) {
            System.out.println("  Product categories      ");
            System.out.println("=================");
            System.out.println("1. Dairy Products");
            System.out.println("2. Beverages");
            System.out.println("3. Snacks");
            System.out.println("4. Vegetables");
            System.out.println("5. Go to Main Menu");
            System.out.println("=================");
            System.out.println("Enter your choice (1-5):");

            int categoryChoice = Integer.parseInt(SCANNER.nextLine());

            switch (categoryChoice) {
                case 1 -> showDairyProducts();
                case 2 -> showBeverages();
                case 3 -> showSnacks();
                case 4 -> showVegetables();
                case 5 -> { return; }
                default -> System.out.println("Invalid choice, please try again.");
            }
        }
    }

    private void showDairyProducts() {
        while (true) {
            System.out.println("  Dairy Products      ");
            System.out.println("=================");
            System.out.println("1. Milk (Rs.10)");
            System.out.println("2. Butter (Rs.100)");
            System.out.println("3. Go to Main Menu");
            System.out.println("=================");
            System.out.println("Enter your choice (1-3):");

            int choice = Integer.parseInt(SCANNER.nextLine());

            switch (choice) {
                case 1 -> addToCart(new DairyProduct("Milk", 10));
                case 2 -> addToCart(new DairyProduct("Butter", 100));
                case 3 -> { return; }
                default -> System.out.println("Invalid choice, please try again.");
            }
        }
    }

    private void showBeverages() {
        while (true) {
            System.out.println("  Beverages      ");
            System.out.println("=================");
            System.out.println("1. Soda (Rs.50)");
            System.out.println("2. Juice (Rs.70)");
            System.out.println("3. Pepsi (Rs.100)");
            System.out.println("4. Go to Main Menu");
            System.out.println("=================");
            System.out.println("Enter your choice (1-4):");

            int choice = Integer.parseInt(SCANNER.nextLine());

            switch (choice) {
                case 1 -> addToCart(new Beverage("Soda", 50));
                case 2 -> addToCart(new Beverage("Juice", 70));
                case 3 -> addToCart(new Beverage("Pepsi", 100));
                case 4 -> { return; }
                default -> System.out.println("Invalid choice, please try again.");
            }
        }
    }

    private void showSnacks() {
        while (true) {
            System.out.println("  Snacks      ");
            System.out.println("=================");
            System.out.println("1. Chips (Rs.50)");
            System.out.println("2. Cookies (Rs.500)");
            System.out.println("3. Nuts (Rs.1000)");
            System.out.println("4. Go to Main Menu");
            System.out.println("=================");
            System.out.println("Enter your choice (1-4):");

            int choice = Integer.parseInt(SCANNER.nextLine());

            switch (choice) {
                case 1 -> addToCart(new Snack("Chips", 50));
                case 2 -> addToCart(new Snack("Cookies", 500));
                case 3 -> addToCart(new Snack("Nuts", 1000));
                case 4 -> { return; }
                default -> System.out.println("Invalid choice, please try again.");
            }
        }
    }

    private void showVegetables() {
        while (true) {
            System.out.println("  Vegetables      ");
            System.out.println("=================");
            System.out.println("1. Tomato (Rs.50/kg)");
            System.out.println("2. Brinjal (Rs.40/kg)");
            System.out.println("3. Lady's Finger (Rs.60/kg)");
            System.out.println("4. Go to Main Menu");
            System.out.println("=================");
            System.out.println("Enter your choice (1-4):");

            int choice = Integer.parseInt(SCANNER.nextLine());

            switch (choice) {
                case 1 -> addToCart(new Vegetable("Tomato", 50));
                case 2 -> addToCart(new Vegetable("Brinjal", 40));
                case 3 -> addToCart(new Vegetable("Lady's Finger", 60));
                case 4 -> { return; }
                default -> System.out.println("Invalid choice, please try again.");
            }
        }
    }

    private void addToCart(Product product) {
        System.out.println("Enter Quantity:");
        int quantity = Integer.parseInt(SCANNER.nextLine());
        cart.addProduct(product, quantity);
    }

    private void showDiscount() {
        int discount = discountCalculator.calculateDiscount(cart.getTotalAmount());
        System.out.println("The total amount is: " + cart.getTotalAmount());
        System.out.println("Discount amount is: Rs." + discount);
        System.out.println();
    }

    private void makePayment() {
        int discount = discountCalculator.calculateDiscount(cart.getTotalAmount());
        int tax = taxCalculator.calculateTax(cart.getTotalAmount());
        int netAmount = cart.getTotalAmount() + tax - discount;
        System.out.println("The total amount is: " + cart.getTotalAmount());
        System.out.println("Discount amount is: Rs." + discount);
        System.out.println("Tax amount is: Rs." + tax);
        System.out.println("The net amount to pay is: Rs." + netAmount);
        System.out.println();
    }
}

public class GeneralStoreManagementSystem2_Rakshitha {
    public static void main(String[] args) {
        GeneralStoreManagementSystem system = new GeneralStoreManagementSystem();
        system.start();
    }
}



